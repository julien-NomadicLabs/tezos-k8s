{{- range $node, $config := .Values.nodes }}
{{ if $config }}
{{- $history_mode := (index $config.instances 0).config.shell.history_mode }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s-%s" "snapshot-scheduler-for" $history_mode "node" }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-%s-%s" "snapshot-scheduler-for" $history_mode "node" }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s-%s" "snapshot-scheduler-for" $history_mode "node" }}
    spec:
      serviceAccountName: {{ $.Values.service_account }}
      containers:
        - name: {{ printf "%s-%s-%s" "snapshot-scheduler-for" $history_mode "node" }}
          image: {{ $.Values.tezos_k8s_images.snapshot_maker }}
          imagePullPolicy: Always
          args:
              - "snapshot-scheduler"
          env:
            - name: HISTORY_MODE
              value: {{ $history_mode }}
            - name: NAMESPACE
              value: {{ $.Release.Namespace }}
            - name: IMAGE_NAME
              valueFrom:
                configMapKeyRef:
                  name: snapshot-configmap
                  key: IMAGE_NAME
---
{{- end }}
{{- end }}
apiVersion: v1
data:
  NAMESPACE: {{ $.Release.Namespace }}
  VOLUME_SNAPSHOT_CLASS_NAME: test-snapclass
  IMAGE_NAME: {{ $.Values.tezos_k8s_images.snapshot_maker }}
  TEZOS_IMAGE: {{ $.Values.images.octez }}
kind: ConfigMap
metadata:
  name: snapshot-configmap
  namespace: {{ $.Release.Namespace }}